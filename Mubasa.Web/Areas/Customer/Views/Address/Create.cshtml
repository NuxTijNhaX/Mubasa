@model Mubasa.Models.Address

@{
    ViewData["Title"] = "Address";
}

<h1>Create</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Address Type</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReceiverName" class="control-label">Receiver Name</label>
                <input asp-for="ReceiverName" class="form-control" />
                <span asp-validation-for="ReceiverName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Province.Name" class="control-label">Province/City</label>
                <select id="province-selector" class="form-select">
                    <option selected disabled>--- Sellect Province/City ---</option>
                </select>
                <input id="province-name" asp-for="Province.Name" hidden />
                <span asp-validation-for="Province.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="District.Name" class="control-label">District</label>
                <select id="district-selector" class="form-select">
                    <option selected disabled>--- Select District ---</option>
                </select>
                <input id="district-name" asp-for="District.Name" hidden />
                <span asp-validation-for="District.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ward.Name" class="control-label">Ward</label>
                <select id="ward-selector" class="form-select">
                    <option selected disabled>--- Select Ward ---</option>
                </select>
                <input id="ward-name" asp-for="Ward.Name" hidden />
                <span asp-validation-for="Ward.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HomeNumber" class="control-label">Home Number</label>
                <input asp-for="HomeNumber" class="form-control" />
                <span asp-validation-for="HomeNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                    </svg>
                    Create New
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-warning" asp-action="Index">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
        </svg>
        Back to List
    </a>
</div>

@section Scripts {
    <script>
        async function fetchAddress(path) {
            const host = window.location.host;
            let response = await fetch(`https://${host}/Customer/Address/LoadAddress?type=${path}`, {
                method: 'GET',
            });

            let result = await response.json();
            return await result.data;
        }

        function assignValue(type, value) {
            const selector = document.getElementById(`${type}-selector`);
            const input = document.getElementById(`${type}-name`);

            input.value = selector.options[selector.selectedIndex].text;
        }

        async function loadProvince() {
            const province = document.getElementById("province-selector");
            const provinceData = await fetchAddress("province");
            createOption(provinceData, province, "ProvinceID", "ProvinceName");
        }
        async function loadDistrict(provinceId) {
            const district = document.getElementById("district-selector");
            district.replaceChildren();
            const districtData = await fetchAddress(`district&id=${provinceId}`);
            createOption(districtData, district, "DistrictID", "DistrictName");
        }
        async function loadWard(districtId) {
            const ward = document.getElementById("ward-selector");
            ward.replaceChildren();
            const wardData = await fetchAddress(`ward&id=${districtId}`);
            createOption(wardData, ward, "WardCode", "WardName");
        }
        function createOption(data, parent, value, text) {
            data.map(i => {
                let opt = document.createElement("option");
                opt.value = i[value];
                opt.text = i[text];
                parent.appendChild(opt);
            });
        }
        function intialEvent() {
            loadProvince();
            const province = document.getElementById("province-selector");
            const district = document.getElementById("district-selector");
            const ward = document.getElementById("ward-selector");
            province.addEventListener("change", function () {
                loadDistrict(this.value);
                assignValue("province", province.textContent);
            })
            district.addEventListener("change", function () {
                loadWard(this.value);
                assignValue("district");
            })
            ward.addEventListener("change", function () {
                assignValue("ward", this.textContent);
            })
        }
        window.addEventListener('load', intialEvent);
    </script>
}