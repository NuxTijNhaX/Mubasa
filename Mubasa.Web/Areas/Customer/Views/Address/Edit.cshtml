@model Mubasa.Models.Address

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Address</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="Id" hidden />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReceiverName" class="control-label">Receiver Name</label>
                <input asp-for="ReceiverName" class="form-control" />
                <span asp-validation-for="ReceiverName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProvinceId" class="control-label">Province/City</label>
                <select asp-for="ProvinceId" id="province-selector" class="form-select">
                    <option selected disabled>--- Sellect Province/City ---</option>
                </select>
                <span asp-validation-for="ProvinceId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DistrictId" class="control-label">District</label>
                <select asp-for="DistrictId" id="district-selector" class="form-select">
                    <option selected disabled>--- Select District ---</option>
                </select>
                <span asp-validation-for="DistrictId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WardId" class="control-label">Ward</label>
                <select asp-for="WardId" id="ward-selector" class="form-select">
                    <option selected disabled>--- Select Ward ---</option>
                </select>
                <span asp-validation-for="WardId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="HomeNumber" class="control-label">Home Number</label>
                <input asp-for="HomeNumber" class="form-control" />
                <span asp-validation-for="HomeNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
                        <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z" />
                    </svg>
                    Save
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-warning" asp-action="Index">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
        </svg>
        Back to List
    </a>
</div>

@section Scripts {
    <script>
        async function fetchAddress(path) {
            const host = window.location.host;
            let response = await fetch(`https://${host}/Customer/Address/${path}`, {
                method: 'GET',
            });

            let result = await response.json();
            return await result.data;
        }

        async function selectOptionValue(type) {
            const selector = document.getElementById(`${type}-selector`);
            const input = document.getElementById(`${type}-name`);

            selector.options[input.value].selected = true;
            loadDistrict(input.value);
        }

        async function loadProvince() {
            const province = document.getElementById("province-selector");
            const provinceData = await fetchAddress("getprovince");
            await createOption(provinceData, province, "Id", "Name");
            // selectOptionValue("province");
        }
        async function loadDistrict(provinceId) {
            const district = document.getElementById("district-selector");
            district.replaceChildren();
            const districtData = await fetchAddress(`getdistrict?province_id=${provinceId}`);
            createOption(districtData, district, "Id", "Name");
            // await selectOptionValue("district");
        }
        async function loadWard(districtId) {
            const ward = document.getElementById("ward-selector");
            ward.replaceChildren();
            const wardData = await fetchAddress(`getward?district_id=${districtId}`);
            createOption(wardData, ward, "Id", "Name");
        }
        function createOption(data, parent, value, text) {
            data.map(i => {
                let opt = document.createElement("option");
                opt.value = i[value];
                opt.text = i[text];
                parent.appendChild(opt);
            });
        }
        function intialEvent() {
            loadProvince();
            const province = document.getElementById("province-selector");
            const district = document.getElementById("district-selector");
            const ward = document.getElementById("ward-selector");
            province.addEventListener("change", function () {
                loadDistrict(this.value);
                // assignValue("province", province.textContent);
            })
            district.addEventListener("change", function () {
                loadWard(this.value);
                // assignValue("district");
            })
            ward.addEventListener("change", function () {
                // assignValue("ward", this.textContent);
            })
        }
        window.addEventListener('load', intialEvent);
    </script>
}